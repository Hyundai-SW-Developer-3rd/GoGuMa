<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ggm.goguma.mapper.MyPageMapper">
	<select id="getReceiptList" resultType="ReceiptDTO">
		select receiptid, orderdate, memberid
		from receipt where memberid = #{memberId}
		order by orderdate desc
	</select>

	<select id="getOrderList" resultType="OrderDTO">
		select orderid, name, price, image, count, status, receiptid
		from orderview where receiptId = #{receiptId}
		order by name
	</select>
	
	<select id="getReceiptDetail" resultType="ReceiptDTO">
		select receiptid, recipient, rcptcontact, rcptaddress, rcptnickname, requirement,
		originalprice, membershipdiscount, coupondiscount, usagepoint, totalprice, orderdate, memberid
		from receipt where receiptid = #{receiptId}
	</select>
	
	<update id="updateOrderStatus">
		update orderdetail set orderstatus = #{status} where orderid = #{orderId}
	</update>
	
	<update id="makeInquirable">
		update pointevent set inquirable = 1 where orderid = #{orderId}
	</update>
	
	<select id="getPointValue" resultType="int">
		select pointvalue from pointevent where receiptId = #{receiptId}
	</select>
	
	<select id="getPointHistory" resultType="PointDTO">
		select pointeventid, pointtype, pointvalue, inquirable, pointCreatedDate, receiptid, orderid
		from pointevent where memberid = #{memberId} and inquirable = 1
		order by pointCreatedDate desc
	</select>
	
	<select id="getSpecificPointHistory" resultType="PointDTO">
		select pointeventid, pointtype, pointvalue, inquirable, pointCreatedDate, receiptid, orderid
		from pointevent where memberid = #{memberId} and pointtype = #{type} and inquirable = 1
		order by pointCreatedDate desc
	</select>
	
	<select id="getPointHistoryByPeriod" resultType="PointDTO">
		select pointeventid, pointtype, pointvalue, inquirable, pointCreatedDate, receiptid, orderid
		from pointevent where memberid = #{memberId} and inquirable = 1
		and pointCreatedDate between to_date(#{startDate}, 'yyyy-mm-dd') and to_date(#{endDate}, 'yyyy-mm-dd')
		order by pointCreatedDate desc
	</select>
	
	<select id="getSpecificPointHistoryByPeriod" resultType="PointDTO">
		select pointeventid, pointtype, pointvalue, inquirable, pointCreatedDate, receiptid, orderid
		from pointevent where memberid = #{memberId} and pointtype = #{type} and inquirable = 1
		and pointCreatedDate between to_date(#{startDate}, 'yyyy-mm-dd') and to_date(#{endDate}, 'yyyy-mm-dd')
		order by pointCreatedDate desc
	</select>

	<select id="getAddressList" resultType="DeliveryAddressDTO">
		select addressId, nickname, recipient, address, contact, isdefault
		from deliveryaddress where memberId = #{memberId}
		order by addressId
	</select>
	
	<select id="getDefaultAddress" resultType="DeliveryAddressDTO">
		select addressId, nickname, recipient, address, contact
		from deliveryaddress
		where memberId = #{memberId} and isdefault = 1
	</select>
	
	<insert id="addAddress" parameterType="DeliveryAddressDTO">
		insert into deliveryaddress(memberid, nickname, recipient, address, contact, isdefault)
		values(#{memberId}, #{nickName}, #{recipient}, #{address}, #{contact}, #{isDefault})
	</insert>
	
	<update id="updateAddress" parameterType="DeliveryAddressDTO">
		update deliveryaddress set nickname = #{nickName}, recipient = #{recipient},
		address = #{address}, contact = #{contact}, isdefault = #{isDefault}
		where memberid = #{memberId} and addressid = #{addressId}
	</update>
	
	<delete id="deleteAddress">
		delete from deliveryaddress
		where memberId = #{memberId} and addressid = #{addressId}
	</delete>
	
	<update id="setDefault">
		update deliveryaddress set isdefault = 1
		where memberId = #{memberId} and addressId = #{addressId}
	</update>
	
	<update id="cancelDefault">
		update deliveryaddress set isdefault = 0 where memberId = #{memberId}
	</update>
	
	<!-- 사용자 포인트를 조회한다. -->
	<select id="getMemberPoint" resultType="int">
		SELECT NVL((SELECT sum(pointvalue)
				FROM pointevent
				WHERE memberid= #{memberId}
				GROUP BY pointtype
				having pointtype='plus') - (SELECT sum(pointvalue)
				                            FROM pointevent
				                            GROUP BY pointtype
				                            having pointtype='minus'),0) AS point
		FROM dual
	</select>
</mapper>